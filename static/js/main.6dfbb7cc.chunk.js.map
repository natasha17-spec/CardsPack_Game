{"version":3,"sources":["main/ui/common/Input/Input.module.css","main/features/test/Test.module.css","main/ui/common/Button/Button.module.css","main/ui/components/Main.module.css","main/ui/components/header/Header.module.css","main/auth/login/Login.module.css","main/auth/registration/Registration.module.css","main/auth/restorePsw/RestorePsw.module.css","main/auth/newPsw/NewPsw.module.css","main/auth/profile/Profile.module.css","main/ui/common/Link/Link.module.css","main/ui/components/header/Header.tsx","main/auth/login/Login.tsx","main/auth/registration/Regirtration.tsx","main/auth/restorePsw/RestorePsw.tsx","main/auth/newPsw/newPsw.tsx","main/auth/profile/Profile.tsx","main/ui/components/routes/Routes.tsx","main/ui/common/Input/Input.tsx","main/ui/common/Button/Button.tsx","main/ui/common/Link/Link.tsx","main/features/test/Test.tsx","main/ui/components/Main.tsx","main/auth/login/loginReducer.tsx","main/auth/registration/registrationReducer.tsx","main/auth/restorePsw/restorePswReducer.tsx","main/auth/newPsw/newPswReducer.tsx","main/auth/profile/profileReducer.tsx","main/bll/store/store.ts","main/ui/App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","Header","className","styles","header","Login","login","Registration","registration","RestorePsw","restorePsw","NewPsw","newPsw","Profile","profile","loginPath","registrationPath","restorePswPath","newPswPath","profilePath","Routs","path","render","Input","props","classForEl","isError","input","error","type","placeholder","Button","disabled","isDisabled","button","buttonTitle","Link","to","activeClassName","active","title","Test","links","map","l","key","test","Main","initialState","rootReducer","combineReducers","state","action","store","createStore","applyMiddleware","thunk","App","Boolean","window","location","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.6dfbb7cc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Input_input__PjJpN\",\"error\":\"Input_error__1V4z7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"test\":\"Test_test__2_mrJ\",\"links\":\"Test_links__1AIGB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__8_dvB\",\"buttonTitle\":\"Button_buttonTitle__37DFa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Main_main__XAxiK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2shZ-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__25czE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"registration\":\"Registration_registration__s9QAt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"restorePsw\":\"RestorePsw_restorePsw__gqnRE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"newPsw\":\"NewPsw_newPsw__2xCNg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3SUdA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"active\":\"Link_active__3EZTi\"};","import React from 'react';\r\nimport styles from './Header.module.css'\r\n\r\nconst Header = () => {\r\n\r\n  return <div className={styles.header}>\r\n    header\r\n  </div>\r\n}\r\nexport default Header","import React from 'react';\r\nimport styles from './Login.module.css'\r\n\r\nconst Login = () => {\r\n\r\n  return  <div className={styles.login}>\r\nLOGIN\r\n  </div>\r\n}\r\nexport default Login\r\n","import React from 'react';\r\nimport styles from './Registration.module.css'\r\n\r\nconst Registration = () => {\r\n\r\n  return  <div className={styles.registration}>\r\nREGISTRATION\r\n  </div>\r\n}\r\nexport default Registration\r\n","import React from 'react';\r\nimport styles from './RestorePsw.module.css'\r\n\r\nconst RestorePsw = () => {\r\n\r\n  return  <div className={styles.restorePsw}>\r\nRESTORE PSW\r\n  </div>\r\n}\r\nexport default RestorePsw\r\n","import React from 'react';\r\nimport styles from './NewPsw.module.css'\r\n\r\nconst NewPsw = () => {\r\n\r\n  return  <div className={styles.newPsw}>\r\nNEW PSW\r\n  </div>\r\n}\r\nexport default NewPsw\r\n","import React from 'react';\r\nimport styles from './Profile.module.css'\r\n\r\nconst Profile = () => {\r\n\r\n  return  <div className={styles.profile}>\r\nPROFILE\r\n  </div>\r\n}\r\nexport default Profile\r\n","import React from 'react';\r\nimport {Route} from 'react-router-dom';\r\nimport Login from \"../../../auth/login/Login\";\r\nimport Registration from \"../../../auth/registration/Regirtration\";\r\nimport RestorePsw from \"../../../auth/restorePsw/RestorePsw\";\r\nimport NewPsw from \"../../../auth/newPsw/newPsw\";\r\nimport Profile from \"../../../auth/profile/Profile\";\r\n\r\nexport const loginPath = '/login'\r\nexport const registrationPath = '/registration'\r\nexport const restorePswPath = '/restorePsw'\r\nexport const newPswPath = '/newPsw'\r\nexport const profilePath = '/profile'\r\n\r\nconst Routs = () => {\r\n  return <div>\r\n    <Route path={loginPath} render={() => <Login/>}/>\r\n    <Route path={registrationPath} render={() => <Registration/>}/>\r\n    <Route path={restorePswPath} render={() => <RestorePsw/>}/>\r\n    <Route path={newPswPath} render={() => <NewPsw/>}/>\r\n    <Route path={profilePath} render={() => <Profile/>}/>\r\n  </div>\r\n}\r\nexport default Routs","import React from 'react';\r\nimport styles from './Input.module.css'\r\n\r\ntype OwnPropsType = {\r\n  isError: boolean\r\n}\r\n\r\nconst Input: React.FC<OwnPropsType> = (props) => {\r\n\r\n  let classForEl = props.isError ? `${styles.input} ${styles.error}` : styles.input\r\n  return (\r\n    <input className={classForEl}\r\n           type='text'\r\n           placeholder=''\r\n    />\r\n  )\r\n}\r\n\r\nexport default Input\r\n","import React from 'react'\r\nimport styles from './Button.module.css'\r\n\r\ntype OwnPropsType = {\r\n  isDisabled: boolean\r\n}\r\n\r\nconst Button: React.FC<OwnPropsType> = (props) => {\r\n  return (\r\n    <button disabled={props.isDisabled} className={styles.button}>\r\n      <span className={styles.buttonTitle}>button</span>\r\n    </button>\r\n  )\r\n}\r\n\r\nexport default Button","import React from 'react';\r\nimport styles from './Link.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\ntype OwnPropsType = {\r\n  path: string\r\n  title: string\r\n}\r\n\r\nconst Link: React.FC<OwnPropsType> = (props) => {\r\n  return <NavLink\r\n    to={props.path}\r\n    activeClassName={styles.active}\r\n  >\r\n    {props.title}\r\n  </NavLink>\r\n}\r\n\r\nexport default Link\r\n","import React from 'react';\r\nimport styles from './Test.module.css'\r\nimport Input from \"../../ui/common/Input/Input\";\r\nimport Button from \"../../ui/common/Button/Button\";\r\nimport Link from '../../ui/common/Link/Link';\r\nimport {loginPath, newPswPath, profilePath, registrationPath, restorePswPath} from \"../../ui/components/routes/Routes\";\r\n\r\nconst Test = () => {\r\n  let links: Array<JSX.Element> = [\r\n    {title: 'login', path: loginPath},\r\n    {title: 'registration', path: registrationPath},\r\n    {title: 'restore password', path: restorePswPath},\r\n    {title: 'new password', path: newPswPath},\r\n    {title: 'profile', path: profilePath},\r\n  ].map(l => <Link key={l.title} title={l.title} path={l.path}/>)\r\n\r\n  return  <div className={styles.test}>\r\n    <h1>TEST</h1>\r\n    <div className={styles.links}>{links}</div>\r\n    <Input isError={false}/>\r\n    <Button isDisabled={false}/>\r\n\r\n  </div>\r\n}\r\nexport default Test","import React from 'react';\r\nimport styles from './Main.module.css'\r\nimport Header from \"./header/Header\";\r\nimport Routs from \"./routes/Routes\";\r\nimport Test from \"../../features/test/Test\";\r\n\r\nconst Main = () => {\r\n  return  <div className={styles.header}>\r\n    <Header/>\r\n    <Test/>\r\n    <Routs/>\r\n  </div>\r\n}\r\nexport default Main","import {AppStateType, InferActionTypes} from '../../bll/store/store';\r\nimport {ThunkAction, ThunkDispatch} from 'redux-thunk';\r\n\r\nconst initialState = {}\r\n\r\nexport const loginReducer = (state: typeof initialState = initialState, action: ActionsType) => {\r\n  switch (action.type) {\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  someAction: () => ({type: ''} as const)\r\n}\r\ntype ActionsType = InferActionTypes<typeof actions>\r\n\r\n// thunks\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, ActionsType>\r\ntype DispatchType = ThunkDispatch<AppStateType, unknown, ActionsType>\r\n\r\nexport const someThunkCreator = (): ThunkType => async (dispatch: DispatchType, getState: () => AppStateType) => {\r\n  try {\r\n    dispatch(actions.someAction())\r\n  } catch (e) {\r\n    console.error('error: ' + {...e})\r\n  }\r\n}","import {AppStateType, InferActionTypes} from '../../bll/store/store';\r\nimport {ThunkAction, ThunkDispatch} from 'redux-thunk';\r\n\r\nconst initialState = {}\r\n\r\nexport const registrationReducer = (state: typeof initialState = initialState, action: ActionsType) => {\r\n  switch (action.type) {\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  someAction: () => ({type: ''} as const)\r\n}\r\ntype ActionsType = InferActionTypes<typeof actions>\r\n\r\n// thunks\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, ActionsType>\r\ntype DispatchType = ThunkDispatch<AppStateType, unknown, ActionsType>\r\n\r\nexport const someActionCreator = (): ThunkType => async (dispatch: DispatchType, getState: () => AppStateType) => {\r\n  try {\r\n    dispatch(actions.someAction())\r\n  } catch (e) {\r\n    console.error('error: ' + {...e})\r\n  }\r\n}","import {AppStateType, InferActionTypes} from '../../bll/store/store';\r\nimport {ThunkAction, ThunkDispatch} from 'redux-thunk';\r\n\r\nconst initialState = {}\r\n\r\nexport const restorePswReducer = (state: typeof initialState = initialState, action: ActionsType) => {\r\n  switch (action.type) {\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  someAction: () => ({type: ''} as const)\r\n}\r\ntype ActionsType = InferActionTypes<typeof actions>\r\n\r\n// thunks\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, ActionsType>\r\ntype DispatchType = ThunkDispatch<AppStateType, unknown, ActionsType>\r\n\r\nexport const someActionCreator = (): ThunkType => async (dispatch: DispatchType, getState: () => AppStateType) => {\r\n  try {\r\n    dispatch(actions.someAction())\r\n  } catch (e) {\r\n    console.error('error: ' + {...e})\r\n  }\r\n}","import {AppStateType, InferActionTypes} from '../../bll/store/store';\r\nimport {ThunkAction, ThunkDispatch} from 'redux-thunk';\r\n\r\nconst initialState = {}\r\n\r\nexport const newPswReducer = (state: typeof initialState = initialState, action: ActionsType) => {\r\n  switch (action.type) {\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  someAction: () => ({type: ''} as const)\r\n}\r\ntype ActionsType = InferActionTypes<typeof actions>\r\n\r\n// thunks\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, ActionsType>\r\ntype DispatchType = ThunkDispatch<AppStateType, unknown, ActionsType>\r\n\r\nexport const someActionCreator = (): ThunkType => async (dispatch: DispatchType, getState: () => AppStateType) => {\r\n  try {\r\n    dispatch(actions.someAction())\r\n  } catch (e) {\r\n    console.error('error: ' + {...e})\r\n  }\r\n}","import {AppStateType, InferActionTypes} from '../../bll/store/store';\r\nimport {ThunkAction, ThunkDispatch} from 'redux-thunk';\r\n\r\nconst initialState = {}\r\n\r\nexport const profileReducer = (state: typeof initialState = initialState, action: ActionsType) => {\r\n  switch (action.type) {\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nconst actions = {\r\n  someAction: () => ({type: ''} as const)\r\n}\r\ntype ActionsType = InferActionTypes<typeof actions>\r\n\r\n// thunks\r\ntype ThunkType = ThunkAction<void, AppStateType, unknown, ActionsType>\r\ntype DispatchType = ThunkDispatch<AppStateType, unknown, ActionsType>\r\n\r\nexport const someActionCreator = (): ThunkType => async (dispatch: DispatchType, getState: () => AppStateType) => {\r\n  try {\r\n    dispatch(actions.someAction())\r\n  } catch (e) {\r\n    console.error('error: ' + {...e})\r\n  }\r\n}","import {applyMiddleware, combineReducers, createStore} from \"redux\"\r\nimport thunk from \"redux-thunk\";\r\nimport {loginReducer} from \"../../auth/login/loginReducer\";\r\nimport {registrationReducer} from \"../../auth/registration/registrationReducer\";\r\nimport {restorePswReducer} from \"../../auth/restorePsw/restorePswReducer\";\r\nimport {newPswReducer} from \"../../auth/newPsw/newPswReducer\";\r\nimport {profileReducer} from \"../../auth/profile/profileReducer\";\r\n\r\nconst rootReducer = combineReducers({\r\n  login: loginReducer,\r\n  registration: registrationReducer,\r\n  restorePsw: restorePswReducer,\r\n  newPsw: newPswReducer,\r\n  profile: profileReducer,\r\n\r\n})\r\nexport type AppStateType = ReturnType<typeof rootReducer>\r\nexport type InferActionTypes<T> = T extends { [keys: string]: (...args: any[]) => infer U } ? U : never\r\nconst store = createStore(rootReducer, applyMiddleware(thunk))\r\n\r\nexport default store","import React from 'react';\nimport './App.css';\nimport Main from \"./components/Main\";\nimport {Provider} from \"react-redux\";\nimport store from \"../bll/store/store\";\nimport {HashRouter} from \"react-router-dom\";\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Provider store={store}>\n        <HashRouter>\n          <Main/>\n        </HashRouter>\n      </Provider>\n    </div>\n  )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './main/ui/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}